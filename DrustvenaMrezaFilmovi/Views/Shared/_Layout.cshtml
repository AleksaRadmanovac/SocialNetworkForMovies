@using DrustvenaMrezaFilmovi.Controllers;
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - DrustvenaMrezaFilmovi</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/bootstrap.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/DrustvenaMrezaFilmovi.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg bg-primary" data-bs-theme="dark">
            <div class="container-fluid">
                
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarColor01" aria-controls="navbarColor01" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarColor01">
                    <ul class="navbar-nav me-auto text-white">
                        
                        <li class="nav-item">
                            @if (LoginRegistracijaController.ulogovan)
                            {
                                <a class="nav-link text-white" asp-area="" asp-controller="Home" asp-action="LoggedIn">Home</a>
                            }else
                            {
                                <a class="nav-link text-white" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                            }

                        </li>

                       
                    </ul>
                    <form class="d-flex">
                        <div class="search-container">
                            <input type="text" id="searchInput" class="form-control" placeholder="Search...">
                            <div id="searchResults" class="search-results"></div>
                        </div>
                        <!--<button class="btn btn-secondary my-2 my-sm-0" type="submit" fdprocessedid="t7igoe">Search</button> -->
                    </form>
                </div>
            </div>
        </nav>
        
    </header>
    <div class="container">
        <main role="main" class="">
            @RenderBody()
        </main>
    </div>

<!-- 
    <footer class="border-top footer text-muted position-fixed">
        <div class="container">
            &copy; 2023 - DrustvenaMrezaFilmovi - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
-->

 
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            const searchInput = $('#searchInput');
            const suggestionsDropdown = $('#searchResults');
            console.log("da");
            searchInput.on('input', function () {
                const query = searchInput.val();

                if (query.length >= 2) {
                    // Send AJAX request to fetch search suggestions
                    $.ajax({
                        url: 'https://localhost:7267/api/search', // Replace with your API endpoint
                        method: 'GET',
                        data: { query: query },
                        success: function (data) {
                            const filmovi = data.filmovi;
                            const umetnici = data.umetnici;
                            const korisnici = data.korisnici;
                            // Clear existing suggestions
                            suggestionsDropdown.empty();
                            console.log(data);
                            // Add new suggestions to the dropdown
                            suggestionsDropdown.append(`<a class="dropdown-item border-bottom border-top">Filmovi</a>`);
                            filmovi.forEach(film => {
                                const filmData = JSON.stringify(film); // Convert the Film object to JSON string
                                const link = `<a class="dropdown-item film" data-film='${filmData}'>${film.naziv}</a>`;
                                suggestionsDropdown.append(link);
                                
                            });
                            /*suggestionsDropdown.append(`<a class="dropdown-item border-bottom border-top">Umetnici</a>`);
                            umetnici.forEach(umetnik => {
                                const umetnikData = JSON.stringify(umetnik); // Convert the Film object to JSON string
                                const link = `<a class="dropdown-item umetnik" data-umetnik='${umetnikData}'>${umetnik.ime} ${umetnik.prezime}</a>`;
                                suggestionsDropdown.append(link);
                                
                            });*/
                            suggestionsDropdown.append(`<a class="dropdown-item border-bottom border-top">Korisnici</a>`);
                            korisnici.forEach(korisnik => {
                                const korisnikData = JSON.stringify(korisnik); // Convert the Film object to JSON string
                                const link = `<a class="dropdown-item korisnik" data-korisnik='${korisnikData}'>${korisnik.username}</a>`;
                                suggestionsDropdown.append(link);
                               
                            });
                        }
                    });
                    // Show the suggestions dropdown
                    suggestionsDropdown.parent().addClass('show');
                    suggestionsDropdown.addClass('show');
                } else {
                    // Hide the suggestions dropdown if query is too short
                    suggestionsDropdown.removeClass('show');
                    suggestionsDropdown.addClass('hide');
                }
            });
            $(document).on('click', function (event) {
                const target = $(event.target);

                // Hide suggestions if the click target is not the search input or the suggestions dropdown
                if (suggestionsDropdown.hasClass('show') && !target.is(searchInput) && !target.is(suggestionsDropdown) && !target.closest(suggestionsDropdown).length) {
                    suggestionsDropdown.removeClass('show');
                    suggestionsDropdown.addClass('hide');
                }
            });
            suggestionsDropdown.on('click', '.dropdown-item.film', function () {
                const film = $(this).data('film');
                console.log(film);
                
                console.log(film.id);
                window.location.href = `/Film/${film.id}`; // Replace with your movie URL pattern
            });
            /*suggestionsDropdown.on('click', '.dropdown-item.umetnik', function () {
                const umetnik = $(this).data('umetnik');
                
                window.location.href = `/Umetnik/${umetnik.id}`; // Replace with your movie URL pattern
            });*/
            suggestionsDropdown.on('click', '.dropdown-item.korisnik', function () {
                const korisnik = $(this).data('korisnik');
                
                window.location.href = `/Korisnik/${korisnik.id}`; // Replace with your movie URL pattern
            });
        });

        
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
